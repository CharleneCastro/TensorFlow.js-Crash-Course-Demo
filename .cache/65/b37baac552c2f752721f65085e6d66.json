{"id":"../../../../../node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/mat_mul.js","dependencies":[{"name":"C:\\Users\\Charlene\\Documents\\Coding Personal Projects\\Sample Code for Review\\Tensorflow js\\TF Testing\\package.json","includedInParent":true,"mtime":1641612588078},{"name":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1641512390406},{"name":"../../ops/mat_mul","loc":{"line":17,"column":23},"parent":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\public\\chained_ops\\mat_mul.js","resolved":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\mat_mul.js"},{"name":"../../tensor","loc":{"line":18,"column":37},"parent":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\public\\chained_ops\\mat_mul.js","resolved":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor.js"}],"generated":{"js":"\"use strict\";\n\nvar _mat_mul = require(\"../../ops/mat_mul\");\n\nvar _tensor = require(\"../../tensor\");\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n(0, _tensor.getGlobalTensorClass)().prototype.matMul = function (b, transposeA, transposeB) {\n  this.throwIfDisposed();\n  return (0, _mat_mul.matMul)(this, b, transposeA, transposeB);\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":23,"column":36}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":23,"column":45}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":33},"generated":{"line":23,"column":46}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":23,"column":52}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":42},"generated":{"line":23,"column":55}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":30,"column":13},"generated":{"line":23,"column":65}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":42},"generated":{"line":23,"column":66}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":23,"column":68}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":42},"generated":{"line":23,"column":78}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":23,"column":80}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":42},"generated":{"line":23,"column":90}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":31,"column":24},"generated":{"line":23,"column":92}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":24,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":32,"column":7},"generated":{"line":24,"column":7}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":32,"column":2},"generated":{"line":24,"column":22}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":25,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":25,"column":9}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":16},"generated":{"line":25,"column":30}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":25,"column":34}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":22},"generated":{"line":25,"column":36}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":25,"column":37}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":25},"generated":{"line":25,"column":39}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":25,"column":49}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":37},"generated":{"line":25,"column":51}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":9},"generated":{"line":25,"column":61}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":33,"column":2},"generated":{"line":25,"column":62}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":34,"column":1},"generated":{"line":26,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":26,"column":1}}],"sources":{"../../../../../../../tfjs-core/src/public/chained_ops/mat_mul.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {matMul} from '../../ops/mat_mul';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {Rank, TensorLike} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    matMul<T extends Tensor>(\n        b: Tensor|TensorLike, transposeA?: boolean,\n        transposeB?: boolean): Tensor;\n  }\n}\n\ngetGlobalTensorClass().prototype.matMul = function<T extends Tensor>(\n    this: T, b: Tensor|TensorLike, transposeA?: boolean,\n    transposeB?: boolean): Tensor {\n  this.throwIfDisposed();\n  return matMul(this, b, transposeA, transposeB);\n};\n"},"lineCount":null}},"error":null,"hash":"2b375a20933db55aa440bad5466eb701","cacheData":{"env":{}}}