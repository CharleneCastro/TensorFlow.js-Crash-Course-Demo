{"id":"../../../../../node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as_type.js","dependencies":[{"name":"C:\\Users\\Charlene\\Documents\\Coding Personal Projects\\Sample Code for Review\\Tensorflow js\\TF Testing\\package.json","includedInParent":true,"mtime":1641612588078},{"name":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1641512390406},{"name":"../../ops/ops","loc":{"line":18,"column":21},"parent":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\public\\chained_ops\\as_type.js","resolved":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\ops.js"},{"name":"../../tensor","loc":{"line":19,"column":37},"parent":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\public\\chained_ops\\as_type.js","resolved":"C:\\Users\\Charlene\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor.js"}],"generated":{"js":"\"use strict\";\n\nvar _ops = require(\"../../ops/ops\");\n\nvar _tensor = require(\"../../tensor\");\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\n\n/**\n * Casts a `tf.Tensor` to a specified dtype.\n *\n * @param dtype Data-type to cast the tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n(0, _tensor.getGlobalTensorClass)().prototype.asType = function (dtype) {\n  this.throwIfDisposed();\n  return (0, _ops.cast)(this, dtype);\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":23},"generated":{"line":32,"column":36}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":32,"column":45}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":33},"generated":{"line":32,"column":46}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":32,"column":52}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":42},"generated":{"line":32,"column":55}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":37,"column":13},"generated":{"line":32,"column":65}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":42},"generated":{"line":32,"column":70}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":37,"column":28},"generated":{"line":32,"column":72}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":33,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":38,"column":7},"generated":{"line":33,"column":7}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":38,"column":2},"generated":{"line":33,"column":22}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":34,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":34,"column":9}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":17},"generated":{"line":34,"column":24}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":34,"column":28}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":23},"generated":{"line":34,"column":30}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":9},"generated":{"line":34,"column":35}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":34,"column":36}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":40,"column":1},"generated":{"line":35,"column":0}},{"source":"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts","name":null,"original":{"line":36,"column":0},"generated":{"line":35,"column":1}}],"sources":{"../../../../../../../tfjs-core/src/public/chained_ops/as_type.ts":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// TODO update import path once op is modularized.\nimport {cast} from '../../ops/ops';\nimport {getGlobalTensorClass, Tensor} from '../../tensor';\nimport {DataType, Rank} from '../../types';\n\ndeclare module '../../tensor' {\n  interface Tensor<R extends Rank = Rank> {\n    asType<T extends Tensor>(this: T, dtype: DataType): T;\n  }\n}\n\n/**\n * Casts a `tf.Tensor` to a specified dtype.\n *\n * @param dtype Data-type to cast the tensor to.\n *\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.asType = function<T extends Tensor>(\n    this: T, dtype: DataType): T {\n  this.throwIfDisposed();\n  return cast<T>(this, dtype);\n};\n"},"lineCount":null}},"error":null,"hash":"160df9495ad4d610082314cb1237b83b","cacheData":{"env":{}}}